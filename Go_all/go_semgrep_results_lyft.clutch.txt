
Findings:

  /home/rtz/github_vuln_research/my_semgrep_rules/Go_all/repos_dir/lyft.clutch/backend/gateway/mux/mux.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.cookie-missing-secure
        A session cookie was detected without setting the 'Secure' flag. The 'secure' flag for
        cookies prevents the client from transmitting the cookie over insecure channels such as
        HTTP. Set the 'Secure' flag by setting 'Secure' to 'true' in the Options struct.

         ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
        167┆ cookie := &http.Cookie{
        168┆ 	Name:     "token",
        169┆ 	Value:    cookies[0],
        170┆ 	Path:     "/",
        171┆ 	HttpOnly: false,
        172┆ 	Secure:   secureCookies,
        173┆ }
          ⋮┆----------------------------------------
         ▶▶┆ Autofix ▶ s/(Secure\s*:\s+)false/\1true/g
        178┆ cookie := &http.Cookie{
        179┆ 	Name:     "refreshToken",
        180┆ 	Value:    cookies[0],
        181┆ 	Path:     "/v1/authn/login",
        182┆ 	HttpOnly: true, // Client cannot access refresh token, it is sent by browser only if login is attempted.
        183┆ 	Secure:   secureCookies,
        184┆ }
          ⋮┆----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.grpc-server-insecure-connection
        Found an insecure gRPC server without 'grpc.Creds()' or options with credentials. This
        allows for a connection without encryption to this server. A malicious attacker could tamper
        with the gRPC message, which could compromise the machine. Include credentials derived from
        an SSL certificate in order to create a secure gRPC connection. You can create credentials
        using 'credentials.NewServerTLSFromFile("cert.pem", "cert.key")'.

        239┆ grpcServer := grpc.NewServer(grpc.ChainUnaryInterceptor(unaryInterceptors...))


  /home/rtz/github_vuln_research/my_semgrep_rules/Go_all/repos_dir/lyft.clutch/backend/module/moduletest/moduletest.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.grpc-server-insecure-connection
        Found an insecure gRPC server without 'grpc.Creds()' or options with credentials. This
        allows for a connection without encryption to this server. A malicious attacker could tamper
        with the gRPC message, which could compromise the machine. Include credentials derived from
        an SSL certificate in order to create a secure gRPC connection. You can create credentials
        using 'credentials.NewServerTLSFromFile("cert.pem", "cert.key")'.

         25┆ grpcServer: grpc.NewServer(),


  /home/rtz/github_vuln_research/my_semgrep_rules/Go_all/repos_dir/lyft.clutch/tools/scaffolding/scaffolder.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.dangerous-exec-command
        Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified
        user data can reach this call site, this is a code injection vulnerability. A malicious
        actor can inject a malicious script to execute arbitrary code.

        235┆ installCmd := exec.Command(yarn, "--frozen-lockfile")
          ⋮┆----------------------------------------
        241┆ compileTypesCmd := exec.Command(yarn, "tsc")
          ⋮┆----------------------------------------
        247┆ compileDevCmd := exec.Command(yarn, "compile")
