
Findings:

  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/.github/txp-index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

        107┆ $txt = shell_exec('grep --exclude-dir={.github,sites} --include=\*.php -rn . -e "'.escapeshellcmd($search).'("');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/include/txp_diag.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.phpinfo-use
        The 'phpinfo' function may reveal sensitive information about your environment.

         85┆ phpinfo();


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/include/txp_file.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.extract-user-data
        Do not call 'extract()' on user-controllable data.  If you must, then you must also provide
        the EXTR_SKIP flag to prevent overwriting existing variables.

        919┆ extract($file);
          ⋮┆----------------------------------------
       1028┆ extract($file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/include/txp_plugin.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.extract-user-data
        Do not call 'extract()' on user-controllable data.  If you must, then you must also provide
        the EXTR_SKIP flag to prevent overwriting existing variables.

        770┆ extract(pathinfo($target));


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/publish/taghandlers.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.eval-use
        Evaluating non-constant commands. This can lead to command injection.

       2824┆ eval($thing);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/vendors/Textpattern/Password/Random.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.mcrypt-use
        Mcrypt functionality has been deprecated and/or removed in recent PHP versions. Consider
        using Sodium or OpenSSL.

         79┆ $random = mcrypt_create_iv($bytes, MCRYPT_DEV_URANDOM);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/vendors/Textpattern/Plugin/Plugin.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unserialize-use
        Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution.
        Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).

        206┆ unserialize($plugin, array('allowed_classes' => false)) :
          ⋮┆----------------------------------------
        207┆ unserialize($plugin);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/textpattern.textpattern/textpattern/vendors/phpmailer/phpmailer/src/PHPMailer.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

       1761┆ $mail = @popen($sendmail, 'w');
          ⋮┆----------------------------------------
       1787┆ $mail = @popen($sendmail, 'w');
