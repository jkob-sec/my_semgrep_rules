
Findings:

  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/.github/workflows/cron_update_modules/script.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

         88â”† exec(sprintf(
         89â”†     'composer update prestashop/%s',
         90â”†     $moduleGit['path']
         91â”† ));


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/autoupgrade/backup/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/autoupgrade/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/backups/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/export/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/ajax_calls.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

         71â”† file_put_contents($put_contents_path, $image_data);
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-url-host
        User data flows into the host portion of this manually-constructed URL. This could allow an
        attacker to send data to their own server, potentially exposing sensitive data such as
        cookies or authorization information sent with this request. They could also probe internal
        servers or other resources that the server runnig this code can access. (This is called
        server-side request forgery, or SSRF.) Do not allow arbitrary hosts. Instead, create an
        allowlist for approved hosts hardcode the correct host.

        107â”† copy('zip://'.$path.'#'.$OnlyFileName, $base_folder.$FullFileName['name']);
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         51â”† unlink($tmp);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/config/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/css/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/dialog.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.file-inclusion
        Detected non-constant file inclusion. This can lead to local file inclusion (LFI) or remote
        file inclusion (RFI) if user input reaches this statement. LFI and RFI could lead to
        sensitive files being obtained by attackers. Instead, explicitly specify what to include. If
        that is not a viable solution, validate user input thoroughly.

         81â”† require_once $current_path.$parent.'config.php';
          â‹®â”†----------------------------------------
        154â”† require_once $language_file;
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

         53â”† if (!file_exists($current_path.$subfolder.$subdir)) {
          â‹®â”†----------------------------------------
         80â”† if (file_exists($current_path.$parent.'config.php')) {
          â‹®â”†----------------------------------------
         92â”† if (!is_dir($thumbs_path.$subdir)) {
          â‹®â”†----------------------------------------
        147â”† if (is_readable('lang/'.$path_parts['basename'].'.php')) {
          â‹®â”†----------------------------------------
        411â”† } elseif (is_dir($current_path.$subfolder.$subdir.$file)) {
          â‹®â”†----------------------------------------
        412â”† $date = filemtime($current_path.$subfolder.$subdir.$file);
          â‹®â”†----------------------------------------
        418â”† $date = filemtime($file_path);
          â‹®â”†----------------------------------------
        419â”† $size = filesize($file_path);
          â‹®â”†----------------------------------------
        752â”† if (!file_exists($thumbs_path.$subdir.$file)) {
          â‹®â”†----------------------------------------
        873â”†  ... $current_path.$subfolder.$subdir.$file) || in_array($file, $hidden_files) || !in_array(mb_strtolower($file_array['extension']), $ext) || ($filter != '' && strpo ... [0m
          [shortened a long line from output, adjust with --max-chars-per-line]
          â‹®â”†----------------------------------------
        885â”† if (file_exists($file_path1)) {
          â‹®â”†----------------------------------------
        888â”† while (file_exists($current_path.$subfolder.$subdir.$info['filename'].".[".$i."].".$info['extension'])) {
          â‹®â”†----------------------------------------
        915â”† if (!file_exists($src_thumb)) {
          â‹®â”†----------------------------------------
        925â”† list($img_width, $img_height, $img_type, $attr) = getimagesize($file_path);
          â‹®â”†----------------------------------------
        942â”† if (file_exists('img/'.$icon_theme.'/'.$extension_lower.".jpg")) {


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/execute.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.file-inclusion
        Detected non-constant file inclusion. This can lead to local file inclusion (LFI) or remote
        file inclusion (RFI) if user input reaches this statement. LFI and RFI could lead to
        sensitive files being obtained by attackers. Instead, explicitly specify what to include. If
        that is not a viable solution, validate user input thoroughly.

         35â”† require_once $language_file;
          â‹®â”†----------------------------------------
         50â”† require_once $path.'config.php';
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

         31â”† if (is_readable('lang/'.$path_parts['basename'].'.php')) {
          â‹®â”†----------------------------------------
         49â”† if (file_exists($path.'config.php')) {
          â‹®â”†----------------------------------------
         77â”† unlink($path);
          â‹®â”†----------------------------------------
         78â”† if (file_exists($path_thumb)) {
          â‹®â”†----------------------------------------
         79â”† unlink($path_thumb);
          â‹®â”†----------------------------------------
         88â”†  ... $info['dirname'].'/'.$path.$relative_image_creation_name_to_prepend[$k].$info['filename'].$relative_image_creation_name_to_append[$k].'.'.$info['extension'])) { ... [0m
          [shortened a long line from output, adjust with --max-chars-per-line]
          â‹®â”†----------------------------------------
         89â”†  ... $info['dirname'].'/'.$path.$relative_image_creation_name_to_prepend[$k].$info['filename'].$relative_image_creation_name_to_append[$k].'.'.$info['extension']); ... [0m
          [shortened a long line from output, adjust with --max-chars-per-line]
          â‹®â”†----------------------------------------
        100â”† if (file_exists($base_dir.$fixed_image_creation_name_to_prepend[$k].$info['filename'].$fixed_image_creation_to_append[$k].'.'.$info['extension'])) {
          â‹®â”†----------------------------------------
        101â”† unlink($base_dir.$fixed_image_creation_name_to_prepend[$k].$info['filename'].$fixed_image_creation_to_append[$k].'.'.$info['extension']);
          â‹®â”†----------------------------------------
        111â”† if (is_dir($path_thumb)) {
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         77â”† unlink($path);
          â‹®â”†----------------------------------------
         79â”† unlink($path_thumb);
          â‹®â”†----------------------------------------
         89â”† unlink($info['dirname'].'/'.$path.$relative_image_creation_name_to_prepend[$k].$info['filename'].$relative_image_creation_name_to_append[$k].'.'.$info['extensio ... [0m
          [shortened a long line from output, adjust with --max-chars-per-line]
          â‹®â”†----------------------------------------
        101â”† unlink($base_dir.$fixed_image_creation_name_to_prepend[$k].$info['filename'].$fixed_image_creation_to_append[$k].'.'.$info['extension']);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/force_download.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         29â”† header('Content-Length: '.(string)filesize($path.$name));
          â‹®â”†----------------------------------------
         30â”† header('Content-Disposition: attachment; filename="'.($name).'"');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

         29â”† header('Content-Length: '.(string)filesize($path.$name));
          â‹®â”†----------------------------------------
         31â”† readfile($path.$name);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/img/ico/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/img/ico_dark/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/include/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/include/utils.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         13â”† return unlink($dir);
          â‹®â”†----------------------------------------
        175â”† unlink($path);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/jPlayer/add-on/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/jPlayer/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/jPlayer/popcorn/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/jPlayer/skin/blue.monday/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/jPlayer/skin/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/js/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/lang/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/upload.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.file-inclusion
        Detected non-constant file inclusion. This can lead to local file inclusion (LFI) or remote
        file inclusion (RFI) if user input reaches this statement. LFI and RFI could lead to
        sensitive files being obtained by attackers. Instead, explicitly specify what to include. If
        that is not a viable solution, validate user input thoroughly.

         35â”† require_once $path.'config.php';
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        149â”† header('location: dialog.php?'.$query);
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

         34â”† if (file_exists($path.'config.php')) {
          â‹®â”†----------------------------------------
         57â”† if (file_exists($targetPath.$_FILES['file']['name'])) {
          â‹®â”†----------------------------------------
         60â”† while (file_exists($targetPath.$info['filename'].'_'.$i.'.'.$info['extension'])) {
          â‹®â”†----------------------------------------
         76â”† chmod($targetFile, 0755);
          â‹®â”†----------------------------------------
         85â”† $imginfo = getimagesize($targetFile);
          â‹®â”†----------------------------------------
        123â”† unlink($targetFile);
          â‹®â”†----------------------------------------
        129â”† chmod($targetFile, 0755);
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        123â”† unlink($targetFile);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/filemanager/uploader/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/import/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/css/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/fonts/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/img/patterns/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/js/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/scss/controllers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/scss/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/scss/modules/colors/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/scss/modules/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/scss/partials/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes_groups/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes_groups/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes_groups/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes_groups/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/attributes_groups/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carrier_wizard/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carrier_wizard/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carrier_wizard/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carrier_wizard/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carriers/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carriers/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carriers/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carriers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/cart_rules/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/cart_rules/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/cart_rules/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carts/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carts/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/carts/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/countries/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/countries/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/countries/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/countries/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/customer_threads/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/customer_threads/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/customer_threads/helpers/options/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/customer_threads/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/customer_threads/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/dashboard/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/dashboard/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/dashboard/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/feature_value/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/feature_value/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/feature_value/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/features/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/features/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/features/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/groups/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/groups/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/groups/helpers/tree/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/groups/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/groups/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/import/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/import/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/import/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/login/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/marketing/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/marketing/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/marketing/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/meta/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/meta/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/modules/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/modules_positions/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/not_found/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/payment/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/payment/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/payment/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/return/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/return/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/return/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/scenes/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/scenes/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/scenes/helpers/tree/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/scenes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/search/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/search/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/search/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop/helpers/tree/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_group/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_group/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_group/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_url/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_url/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_url/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/shop_url/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/specific_price_rule/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/specific_price_rule/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/specific_price_rule/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stats/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stats/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stats/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/statuses/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/statuses/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/statuses/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stores/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stores/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stores/helpers/options/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/stores/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/suppliers/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/suppliers/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/suppliers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tabs/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tabs/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tabs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tags/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tags/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tags/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tax_rules/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tax_rules/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tax_rules/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tax_rules/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tax_rules_group/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/tax_rules_group/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/translations/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/translations/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/translations/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/controllers/zones/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/calendar/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/dataviz/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/form/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/kpi/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/options/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/shops_list/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/tree/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/uploader/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/helpers/view/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/default/template/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/admin-dev/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/app/Resources/geoip/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/cachefs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/purifier/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/push/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/sandbox/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/smarty/cache/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/smarty/compile/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/smarty/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/cache/tcpdf/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Attachment.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        114â”† @unlink(_PS_DOWNLOAD_DIR_ . $this->file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/CSV.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        111â”† header('Content-disposition: attachment; filename="' . $this->filename . '.csv"');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Carrier.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       1010â”† unlink($old_tmp_logo);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Cart.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        389â”† unlink(_PS_UPLOAD_DIR_ . $must_unlink['value'] . '_small');
          â‹®â”†----------------------------------------
        390â”† unlink(_PS_UPLOAD_DIR_ . $must_unlink['value']);
          â‹®â”†----------------------------------------
       1766â”† @unlink(_PS_UPLOAD_DIR_ . $customization['value']);
          â‹®â”†----------------------------------------
       1767â”† @unlink(_PS_UPLOAD_DIR_ . $customization['value'] . '_small');
          â‹®â”†----------------------------------------
       1991â”† $result &= file_exists(_PS_UPLOAD_DIR_ . $cust_data['value']) ? @unlink(_PS_UPLOAD_DIR_ . $cust_data['value']) : true;
          â‹®â”†----------------------------------------
       1992â”† $result &= file_exists(_PS_UPLOAD_DIR_ . $cust_data['value'] . '_small') ? @unlink(_PS_UPLOAD_DIR_ . $cust_data['value'] . '_small') : true;
          â‹®â”†----------------------------------------
       4332â”† $result = !file_exists(_PS_UPLOAD_DIR_ . $cust_data['value']) || @unlink(_PS_UPLOAD_DIR_ . $cust_data['value']);
          â‹®â”†----------------------------------------
       4333â”† $result = !($result && file_exists(_PS_UPLOAD_DIR_ . $cust_data['value'] . '_small')) || @unlink(_PS_UPLOAD_DIR_ . $cust_data['value'] . '_small');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/ConfigurationTest.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        253â”† @unlink($dummy);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/CustomerMessage.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        165â”† @unlink(_PS_UPLOAD_DIR_ . $this->file_name);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Image.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        374â”† unlink(_PS_TMP_IMG_DIR_ . 'product_' . $idProduct . '.jpg');
          â‹®â”†----------------------------------------
        602â”† unlink(_PS_TMP_IMG_DIR_ . $d);
          â‹®â”†----------------------------------------
        632â”† unlink($this->image_dir . $this->getExistingImgPath() . '.' . $this->image_format);
          â‹®â”†----------------------------------------
        666â”† if (file_exists($file) && !@unlink($file)) {
          â‹®â”†----------------------------------------
        704â”† unlink($path . $file);
          â‹®â”†----------------------------------------
        724â”† @unlink($path . 'index.php');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/ImageManager.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

        440â”† $mimeType = trim(exec('file -b --mime-type ' . escapeshellarg($filename)));
          â‹®â”†----------------------------------------
        442â”† $mimeType = trim(exec('file --mime ' . escapeshellarg($filename)));
          â‹®â”†----------------------------------------
        445â”† $mimeType = trim(exec('file -bi ' . escapeshellarg($filename)));
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         90â”† @unlink(_PS_TMP_IMG_DIR_ . $cacheImage);
          â‹®â”†----------------------------------------
        845â”† @unlink($tmpfile);
          â‹®â”†----------------------------------------
        882â”† unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . (int) $id_entity . '.jpg');
          â‹®â”†----------------------------------------
        885â”† unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . (int) $id_entity . '_' . (int) Context::getContext()->shop->id . '.jpg');
          â‹®â”†----------------------------------------
        894â”† @unlink($orig_tmpfile);
          â‹®â”†----------------------------------------
        898â”† unlink($orig_tmpfile);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Language.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        625â”† unlink($key);
          â‹®â”†----------------------------------------
        641â”† unlink(_PS_MODULE_DIR_ . $mod . '/' . $this->iso_code . '.php');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/ObjectModel.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       1937â”† && !unlink($this->image_dir . $this->id . '.' . $this->image_format)) {
          â‹®â”†----------------------------------------
       1942â”† && !unlink(_PS_TMP_IMG_DIR_ . $this->def['table'] . '_' . $this->id . '.' . $this->image_format)) {
          â‹®â”†----------------------------------------
       1946â”† && !unlink(_PS_TMP_IMG_DIR_ . $this->def['table'] . '_mini_' . $this->id . '.' . $this->image_format)) {
          â‹®â”†----------------------------------------
       1953â”† && !unlink($this->image_dir . $this->id . '-' . stripslashes($image_type['name']) . '.' . $this->image_format)) {


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/PrestaShopAutoload.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.eval-use
        Evaluating non-constant commands. This can lead to command injection.

        133â”† return eval('class ' . $className . ' extends ' . static::$class_aliases[$className] . ' {}');
          â‹®â”†----------------------------------------
        150â”† eval($this->index[$className . 'Core']['type'] . ' ' . $className . ' extends ' . $className . 'Core {}');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/PrestaShopBackup.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        191â”† if (!$this->id || !unlink($this->id)) {


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/ProductDownload.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        147â”† return unlink(_PS_DOWNLOAD_DIR_ . $this->filename)


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/QqUploadedFileForm.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         98â”† unlink($tmpName);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/QqUploadedFileXhr.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        110â”† unlink($tmpName);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Tools.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.file-inclusion
        Detected non-constant file inclusion. This can lead to local file inclusion (LFI) or remote
        file inclusion (RFI) if user input reaches this statement. LFI and RFI could lead to
        sensitive files being obtained by attackers. Instead, explicitly specify what to include. If
        that is not a viable solution, validate user input thoroughly.

        590â”† @include_once _PS_THEME_DIR_ . 'lang/' . $iso . '.php';
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        194â”† header($header);
          â‹®â”†----------------------------------------
        198â”† header('Location: ' . $url);
          â‹®â”†----------------------------------------
        226â”† header('Location: ' . $url);
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       1029â”† unlink($dirname . $file);
          â‹®â”†----------------------------------------
       1062â”† return unlink($file);
          â‹®â”†----------------------------------------
       3532â”† unlink($src . DIRECTORY_SEPARATOR . $file);
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unserialize-use
        Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution.
        Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).

       3644â”† return @unserialize($serialized);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Upgrader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.md5-loose-equality
        Make sure comparisons involving md5 values are strict (use `===` not `==`) to avoid type
        juggling issues

        322â”† if (md5_file($path) == $originalSum) {


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/Uploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        287â”† unlink($filePath);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/cache/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/controller/AdminController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

       1074â”† header('Content-disposition: attachment; filename="' . $this->table . '_' . date('Y-m-d_His') . '.csv"');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       4006â”† unlink($tmp_name);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/controller/FrontController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        798â”† header('Location: ' . Tools::getShopDomainSsl(true) . $_SERVER['REQUEST_URI']);
          â‹®â”†----------------------------------------
        800â”† header('Location: ' . Tools::getShopDomain(true) . $_SERVER['REQUEST_URI']);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/controller/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/db/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/exception/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/helper/HelperOptions.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

         66â”†  ... $_SERVER['DOCUMENT_ROOT'] . _MODULE_DIR_ . $tab['module'] . '/' . $tab['class_name'] . '.gif') ? _MODULE_DIR_ . $tab['module'] . '/' : '../img/t/') . $tab['clas ... [0m
          [shortened a long line from output, adjust with --max-chars-per-line]


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/helper/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/log/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/module/Module.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.eval-use
        Evaluating non-constant commands. This can lead to command injection.

       2858â”† eval(
       2859â”†     preg_replace(
       2860â”†         [
       2861â”†             '#^\s*<\?(?:php)?#',
       2862â”†             '#class\s+' . $classname . '\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?#i',
       2863â”†         ],
       2864â”†         [
       2865â”†             ' ',
       2866â”†             'class ' . $classname . 'OverrideOriginal' . $uniq . ' extends \stdClass',
       2867â”†         ],
           [hid 3 additional lines, adjust with --max-lines-per-finding] 
       2875â”† eval(
       2876â”†     preg_replace(
       2877â”†         [
       2878â”†             '#^\s*<\?(?:php)?#',
       2879â”†             '#class\s+' . $classname . '(\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?)?#i',
       2880â”†         ],
       2881â”†         [
       2882â”†             ' ',
       2883â”†             'class ' . $classname . 'Override' . $uniq . ' extends \stdClass',
       2884â”†         ],
           [hid 3 additional lines, adjust with --max-lines-per-finding] 
       2956â”† eval(
       2957â”†     preg_replace(
       2958â”†         [
       2959â”†             '#^\s*<\?(?:php)?#',
       2960â”†             '#class\s+' . $classname . '(\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?)?#i',
       2961â”†         ],
       2962â”†         [
       2963â”†             ' ',
       2964â”†             'class ' . $classname . 'Override' . $uniq . ' extends \stdClass',
       2965â”†         ],
           [hid 3 additional lines, adjust with --max-lines-per-finding] 
       3082â”† eval(
       3083â”†     preg_replace(
       3084â”†         [
       3085â”†             '#^\s*<\?(?:php)?#',
       3086â”†             '#class\s+' . $classname . '\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?#i',
       3087â”†         ],
       3088â”†         [
       3089â”†             ' ',
       3090â”†             'class ' . $classname . 'OverrideOriginal_remove' . $uniq . ' extends \stdClass',
       3091â”†         ],
           [hid 3 additional lines, adjust with --max-lines-per-finding] 
       3098â”† eval(
       3099â”†     preg_replace(
       3100â”†         [
       3101â”†             '#^\s*<\?(?:php)?#',
       3102â”†             '#class\s+' . $classname . '(\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?)?#i',
       3103â”†         ],
       3104â”†         [
       3105â”†             ' ',
       3106â”†             'class ' . $classname . 'Override_remove' . $uniq . ' extends \stdClass',
       3107â”†         ],
           [hid 3 additional lines, adjust with --max-lines-per-finding] 
       3208â”† eval(
       3209â”†     preg_replace(
       3210â”†         [
       3211â”†             '#^\s*<\?(?:php)?#',
       3212â”†             '#class\s+' . $classname . '\s+extends\s+([a-z0-9_]+)(\s+implements\s+([a-z0-9_]+))?#i',
       3213â”†         ],
       3214â”†         [
       3215â”†             ' ',
       3216â”†             'class ' . $classname . 'OverrideOriginal_check' . $uniq . ' extends \stdClass',
       3217â”†         ],
           [hid 3 additional lines, adjust with --max-lines-per-finding] 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       2447â”† @unlink($file);
          â‹®â”†----------------------------------------
       3234â”† unlink($override_path);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/module/ModuleGraph.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        256â”† header('Content-Disposition: attachment; filename="' . $this->displayName . ' - ' . time() . '.csv"');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/module/ModuleGrid.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        193â”† header('Content-Disposition: attachment; filename="' . $this->displayName . ' - ' . time() . '.csv"');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/module/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/order/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/pdf/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/product/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/range/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/shop/Shop.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        389â”† header('Location: ' . Tools::getShopProtocol() . $url);
          â‹®â”†----------------------------------------
        463â”† header('Location: ' . Tools::getShopProtocol() . $url);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/shop/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/stock/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/tax/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/tree/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/webservice/WebserviceSpecificManagementAttachments.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        336â”† unlink(_PS_DOWNLOAD_DIR_ . $attachment->file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/webservice/WebserviceSpecificManagementImages.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

       1059â”† $mime_type = trim(exec('file -b --mime-type ' . escapeshellarg($file['tmp_name'])));
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        867â”† @unlink($file_path);
          â‹®â”†----------------------------------------
        876â”† if (!@unlink($declination_path)) {
          â‹®â”†----------------------------------------
       1084â”† @unlink($tmp_name);
          â‹®â”†----------------------------------------
       1148â”† @unlink($tmp_name);
          â‹®â”†----------------------------------------
       1169â”† @unlink(_PS_TMP_IMG_DIR_ . $tmp_name);
          â‹®â”†----------------------------------------
       1184â”† @unlink(_PS_TMP_IMG_DIR_ . $tmp_name);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/classes/webservice/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/config/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/config/xml/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/config/xml/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminCarrierWizardController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        777â”† @unlink($file);
          â‹®â”†----------------------------------------
        876â”† unlink(_PS_SHIP_IMG_DIR_ . $carrier->id . '.jpg');
          â‹®â”†----------------------------------------
        974â”† unlink($old_tmp_logo);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminCartsController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        886â”† header('Content-Disposition: attachment; filename="' . $name . '.jpg"');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        452â”† unlink($tmp_name);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminCustomerThreadsController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        559â”† header('Content-Type: ' . $extension);
          â‹®â”†----------------------------------------
        561â”† header('Content-Disposition:attachment;filename="' . $filename . '"');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

        516â”† if (file_exists(_PS_UPLOAD_DIR_ . $_GET['filename']) && Validate::isFileName($_GET['filename'])) {
          â‹®â”†----------------------------------------
        563â”† readfile(_PS_UPLOAD_DIR_ . $filename);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminGendersController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        243â”† unlink($current_file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminImagesController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        556â”† unlink($dir . $d);
          â‹®â”†----------------------------------------
        576â”† unlink($dir . $imageObj->getImgFolder() . $d);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminImportController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

       4546â”† header('Content-Type: ' . $mime_type);
          â‹®â”†----------------------------------------
       4547â”† header('Content-Length: ' . filesize($file));
          â‹®â”†----------------------------------------
       4548â”† header('Content-Disposition: attachment; filename="' . $filename . '"');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       1015â”† @unlink($uniqid_path);
          â‹®â”†----------------------------------------
       4399â”† unlink(_PS_CAT_IMG_DIR_ . $d);
          â‹®â”†----------------------------------------
       4475â”† unlink(_PS_MANU_IMG_DIR_ . $d);
          â‹®â”†----------------------------------------
       4486â”† unlink(_PS_SUPP_IMG_DIR_ . $d);
          â‹®â”†----------------------------------------
       4529â”† @unlink($file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminModulesController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        326â”† @unlink($file);
          â‹®â”†----------------------------------------
        348â”† unlink($dir . '/' . $object);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminProductsController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-sql-string
        User data flows into this manually-constructed SQL string. User data can be safely inserted
        into SQL strings using prepared statements or an object-relational mapper (ORM). Manually-
        constructed SQL strings is a possible indicator of SQL injection, which could let an
        attacker steal or manipulate data from the database. Instead, use prepared statements
        (`$mysqli->prepare("INSERT INTO test(id, label) VALUES (?, ?)");`) or a safe library.

       3268â”†  ... 'UPDATE ' . _DB_PREFIX_ . 'image_lang SET legend = "' . pSQL($val) . '" WHERE ' . ($id_image ? 'id_image = ' . (int) $id_image : 'EXISTS (SELECT 1 FROM ' . _DB_ ... [0m
          [shortened a long line from output, adjust with --max-chars-per-line]
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        467â”† @unlink($_FILES['attachment_file']['tmp_name']);
          â‹®â”†----------------------------------------
        651â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_' . $productId . '.jpg');
          â‹®â”†----------------------------------------
        652â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . $productId . '_' . $this->context->shop->id . '.jpg');
          â‹®â”†----------------------------------------
       1536â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_' . (int) $img->id_product . '.jpg');
          â‹®â”†----------------------------------------
       1537â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . (int) $img->id_product . '_' . $this->context->shop->id . '.jpg');
          â‹®â”†----------------------------------------
       1572â”† $res &= @unlink(_PS_TMP_IMG_DIR_ . 'product_' . $image->id_product . '.jpg');
          â‹®â”†----------------------------------------
       1575â”† $res &= @unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . $image->id_product . '_' . $this->context->shop->id . '.jpg');
          â‹®â”†----------------------------------------
       1690â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_' . $product->id . '.jpg');
          â‹®â”†----------------------------------------
       1691â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . $product->id . '_' . $this->context->shop->id . '.jpg');
          â‹®â”†----------------------------------------
       1733â”† @unlink($tmpName);
          â‹®â”†----------------------------------------
       2910â”† unlink($file['save_path']);
          â‹®â”†----------------------------------------
       2938â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_' . (int) $product->id . '.jpg');
          â‹®â”†----------------------------------------
       2939â”† @unlink(_PS_TMP_IMG_DIR_ . 'product_mini_' . (int) $product->id . '_' . $this->context->shop->id . '.jpg');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminRequestSqlController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        374â”† header('Content-Type: text/csv; charset=' . $charset);
          â‹®â”†----------------------------------------
        376â”† header('Content-Disposition: attachment; filename="' . $file . '"');
          â‹®â”†----------------------------------------
        377â”† header('Content-Length: ' . $filesize);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminStatusesController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        706â”† unlink($current_file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminSuppliersController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        459â”† unlink($current_logo_file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/AdminTranslationsController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        549â”† header('Content-Disposition: attachment; filename="' . $this->lang_selected->iso_code . '.gzip' . '"');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        553â”† @unlink($file_name);
          â‹®â”†----------------------------------------
        675â”† @unlink($theme_file_old);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/admin/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/front/AttachmentController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         42â”† header('Content-Type: ' . $attachment->mime);
          â‹®â”†----------------------------------------
         43â”† header('Content-Length: ' . filesize(_PS_DOWNLOAD_DIR_ . $attachment->file));
          â‹®â”†----------------------------------------
         44â”† header('Content-Disposition: attachment; filename="' . utf8_decode($attachment->file_name) . '"');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/front/GetFileController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

        308â”† $mimeType = trim(@exec('file -b --mime-type ' . escapeshellarg($file)));
          â‹®â”†----------------------------------------
        310â”† $mimeType = trim(@exec('file --mime ' . escapeshellarg($file)));
          â‹®â”†----------------------------------------
        313â”† $mimeType = trim(@exec('file -bi ' . escapeshellarg($file)));
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        281â”† header('Content-Type: ' . $this->getMimeType($file, $filename));
          â‹®â”†----------------------------------------
        282â”† header('Content-Length: ' . filesize($file));
          â‹®â”†----------------------------------------
        284â”† header('Content-Disposition: attachment; filename="' . $filename . '"');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/front/ProductController.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        210â”† header('Location: ' . $this->context->link->getProductLink($this->product->id_type_redirected));
          â‹®â”†----------------------------------------
        215â”† header('Location: ' . $this->context->link->getProductLink($this->product->id_type_redirected));
          â‹®â”†----------------------------------------
        219â”† header('Location: ' . $this->context->link->getCategoryLink($this->product->id_type_redirected));
          â‹®â”†----------------------------------------
        224â”† header('Location: ' . $this->context->link->getCategoryLink($this->product->id_type_redirected));
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        952â”† unlink($tmp_name);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/front/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/front/listing/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/controllers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/docs/csv_import/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/docs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/docs/licenses/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/download/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/admin/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/c/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/cms/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/co/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/e/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/genders/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/jquery-ui/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/l/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/m/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/module/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/os/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/p/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/pr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/s/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/scenes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/scenes/thumbs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/st/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/su/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/t/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/img/tmp/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/classes/controllerHttp.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        351â”† header('location: index.php?step=' . $step);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/classes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/classes/session.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unserialize-use
        Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution.
        Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).

        110â”† $ref = unserialize(substr($ref, strlen('serialized_array:')));


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/controllers/console/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/controllers/console/process.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        342â”† unlink($filepath);
          â‹®â”†----------------------------------------
        354â”† unlink($file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/controllers/http/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/controllers/http/process.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        368â”† unlink($filepath);
          â‹®â”†----------------------------------------
        380â”† unlink($file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/controllers/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/data/img/genders/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/data/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/data/img/os/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/data/xml/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/c/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/m/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/p/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/scenes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/scenes/thumbs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/st/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/img/su/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/bn/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/bn/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/br/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/br/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/de/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/de/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/en/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/en/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/es/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/es/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/fa/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/fa/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/fr/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/fr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/id/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/id/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/it/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/it/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/nl/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/nl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/pl/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/pl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/qc/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/qc/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/ro/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/ro/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/ru/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/ru/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/tw/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/tw/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/vn/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/vn/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/zh/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/fashion/langs/zh/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/fixtures/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ar/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ar/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ar/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bg/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bg/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bg/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bn/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bn/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bn/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/br/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/br/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/br/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bs/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bs/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/bs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ca/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/cs/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/cs/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/cs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/da/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/da/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/da/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/de/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/de/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/de/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/el/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/el/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/el/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/en/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/en/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/en/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/es/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/es/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/es/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/et/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/et/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/et/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fa/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fa/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fa/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fi/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fi/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fi/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fr/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fr/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/fr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/gl/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/gl/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/gl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/he/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/he/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/he/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hi/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hi/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hi/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hr/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hr/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hu/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hu/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/hu/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/id/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/id/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/id/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/it/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/it/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/it/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ja/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ja/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ja/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ko/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ko/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ko/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/lt/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/lt/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/lt/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/lv/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/lv/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/lv/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/mk/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/mk/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/mk/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/mx/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/mx/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/mx/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/nl/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/nl/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/nl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/no/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/no/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/no/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/pl/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/pl/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/pl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/pt/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/pt/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/pt/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/qc/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/qc/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/qc/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ro/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ro/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ro/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ru/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ru/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/ru/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/si/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/si/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/si/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sk/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sk/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sk/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sq/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sq/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sq/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sr/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sr/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sv/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sv/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/sv/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/tr/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/tr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/tw/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/tw/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/tw/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/uk/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/uk/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/uk/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/vn/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/vn/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/vn/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/zh/data/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/zh/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/langs/zh/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header('Last-Modified: '.gmdate('D, d M Y H:i:s').' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/sandbox/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/theme/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/theme/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/theme/js/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/install-dev/theme/views/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/admin/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/cropper/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/ajaxfileupload/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/alerts/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/alerts/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/autocomplete/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/bxslider/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/chosen/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/cluetip/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/fancybox/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/footable/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/footable-sort/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/growl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/imgareaselect/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jgrowl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jqzoom/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jstree/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jstree/themes/apple/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jstree/themes/classic/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jstree/themes/default/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jstree/themes/default-rtl/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/jstree/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/select2/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/smartWizard/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/tabpane/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/thickbox/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/timepicker/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/treeview-categories/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/treeview-categories/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/validate/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/plugins/validate/localization/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/i18n/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/base/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/base/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/base/minified/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/base/minified/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/ui-lightness/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/ui-lightness/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/ui-lightness/minified/images/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/jquery/ui/themes/ui-lightness/minified/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/retro-compat.js.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.tainted-filename
        File name based on user input risks server-side request forgery.

        124â”† $html .= file_get_contents($plugins[$file]['new_file']);
          â‹®â”†----------------------------------------
        131â”† $html .= file_get_contents($plugins[$file]['new_file']);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/langs/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/advlist/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         29â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/align/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/anchor/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/autolink/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/autoresize/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/autosave/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/bbcode/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/charmap/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/code/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/colorpicker/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/contextmenu/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/directionality/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/emoticons/img/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/emoticons/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/example/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/example_dependency/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/fullpage/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/fullscreen/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/hr/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/image/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/importcss/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/insertdatetime/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/layer/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/legacyoutput/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/link/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/lists/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/media/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/nonbreaking/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/noneditable/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/pagebreak/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/paste/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/placeholder/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/preview/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/print/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/save/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/searchreplace/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/tabfocus/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/table/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/template/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/textcolor/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/visualblocks/css/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/visualblocks/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/visualchars/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/plugins/wordcount/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/skins/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/skins/prestashop/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/js/tiny_mce/themes/modern/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/localization/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/mails/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/mails/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/modules/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/override/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/pdf/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Cart/CommandHandler/AddCustomizationHandler.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        156â”† unlink($tmpName);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Feature/Repository/FeatureValueRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb` Detected string concatenation with a non-literal variable in a Doctrine QueryBuilder
        method. This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        265â”† ->andWhere(sprintf('fv.%s = :%s', $key, $key))


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/File/Uploader/AttachmentFileUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        105â”† unlink($fileLink);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/File/Uploader/VirtualProductFileUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        127â”† unlink($filePath);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/AbstractImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        114â”† unlink($temporaryImageName);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/CategoryCoverImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        109â”† unlink($temporaryImageName);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/CategoryMenuThumbnailUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        112â”† unlink($uploadedFile['save_path']);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/CategoryThumbnailImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         88â”† unlink($tmpName);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/EmployeeImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         88â”† unlink($currentImage);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/ManufacturerImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        110â”† unlink($currentLogo);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/ProfileImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         88â”† unlink($currentImage);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Image/Uploader/SupplierImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         68â”† unlink($currentLogo);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Import/ImageCopier.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        142â”† @unlink($tmpFile);
          â‹®â”†----------------------------------------
        194â”† unlink($file);
          â‹®â”†----------------------------------------
        199â”† unlink($file);
          â‹®â”†----------------------------------------
        214â”† @unlink($origTmpfile);
          â‹®â”†----------------------------------------
        218â”† unlink($origTmpfile);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Import/ImportDataFormatter.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        137â”† @unlink($uniqidPath);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Import/ImportEntityDeleter.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        176â”† $this->connection->executeQuery(
        177â”†     "DELETE FROM {$this->dbPrefix}category WHERE id_category NOT IN (?)",
        178â”†     [$protectedCategoriesIds],
        179â”†     [Connection::PARAM_INT_ARRAY]
        180â”† );
          â‹®â”†----------------------------------------
        182â”† $this->connection->executeQuery(
        183â”†     "DELETE FROM {$this->dbPrefix}category_lang WHERE id_category NOT IN (?)",
        184â”†     [$protectedCategoriesIds],
        185â”†     [Connection::PARAM_INT_ARRAY]
        186â”† );
          â‹®â”†----------------------------------------
        188â”† $this->connection->executeQuery(
        189â”†     "DELETE FROM {$this->dbPrefix}category_shop WHERE id_category NOT IN (?)",
        190â”†     [$protectedCategoriesIds],
        191â”†     [Connection::PARAM_INT_ARRAY]
        192â”† );
          â‹®â”†----------------------------------------
        194â”† $this->connection->executeQuery("ALTER TABLE {$this->dbPrefix}category AUTO_INCREMENT = 3");
          â‹®â”†----------------------------------------
        271â”† $this->connection->executeQuery(
        272â”†     "DELETE FROM `{$this->dbPrefix}stock_available` WHERE id_product_attribute != 0"
        273â”† );
          â‹®â”†----------------------------------------
        286â”† $this->connection->executeQuery("TRUNCATE TABLE `{$this->dbPrefix}{$table}`");
          â‹®â”†----------------------------------------
        307â”† $this->connection->executeQuery("TRUNCATE TABLE `{$this->dbPrefix}{$table}`");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Language/CommandHandler/AbstractLanguageHandler.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         96â”† unlink($noPictureImagePath);
          â‹®â”†----------------------------------------
         97â”† unlink($temporaryImage);
          â‹®â”†----------------------------------------
        131â”† unlink($currentFile);
          â‹®â”†----------------------------------------
        135â”† unlink($newImagePath);
          â‹®â”†----------------------------------------
        136â”† unlink($temporaryImage);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Language/LanguageImageManager.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        190â”† unlink($file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Module/Configuration/ModuleSelfConfigurator.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        468â”† $stmt = $this->connection->prepare($sql);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Product/AdminProductWrapper.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        795â”† unlink(_PS_DOWNLOAD_DIR_ . $download->filename);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Product/Combination/Repository/CombinationRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb` Detected string concatenation with a non-literal variable in a Doctrine QueryBuilder
        method. This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        640â”† ->update(sprintf('%sstock_available', $this->dbPrefix), 'ps')


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Product/Image/Uploader/ProductImageUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        186â”† if (!@unlink($cachedImage)) {
          â‹®â”†----------------------------------------
        220â”† if (!@unlink($generatedImagePath)) {


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Product/Repository/ProductRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb` Detected string concatenation with a non-literal variable in a Doctrine QueryBuilder
        method. This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        433â”† $qb->where($qb->expr()->or(
        434â”†     $qb->expr()->like('pl.name', $dbSearchPhrase),
        435â”† 
        436â”†     // Product references
        437â”†     $qb->expr()->like('p.isbn', $dbSearchPhrase),
        438â”†     $qb->expr()->like('p.upc', $dbSearchPhrase),
        439â”†     $qb->expr()->like('p.mpn', $dbSearchPhrase),
        440â”†     $qb->expr()->like('p.reference', $dbSearchPhrase),
        441â”†     $qb->expr()->like('p.ean13', $dbSearchPhrase),
        442â”†     $qb->expr()->like('p.supplier_reference', $dbSearchPhrase),
           [hid 9 additional lines, adjust with --max-lines-per-finding] 


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Security/Admin.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

        126â”† header('Location: ' . $this->context->getAdminLink('', false));


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Adapter/Security/SslMiddleware.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         71â”† header("Location: $redirect");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Addon/Theme/ThemeManager.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        241â”† @unlink($this->appConfiguration->get('_PS_CONFIG_DIR_') . 'themes/' . $name . '/shop' . $this->shop->id . '.json');
          â‹®â”†----------------------------------------
        289â”† @unlink($this->appConfiguration->get('_PS_CONFIG_DIR_') . 'themes/' . $name . '/shop' . $this->shop->id . '.json');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Domain/CustomerService/CommandHandler/UpdateCustomerThreadStatusHandler.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

         63â”†         $statement = $this->connection->prepare('
         64â”†             UPDATE ' . $this->dbPrefix . 'customer_thread
         65â”†             SET status = :status
         66â”† 		    WHERE id_customer_thread = :id_customer_thread
         67â”† 		    LIMIT 1
         68â”†         ');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Domain/Theme/CommandHandler/ImportThemeHandler.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        101â”† @unlink($themePath);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Grid/Position/UpdateHandler/DoctrinePositionUpdateHandler.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb             ->from($this->dbPrefix . $positionDefinition->getTable(), 't')` Detected
        string concatenation with a non-literal variable in a Doctrine QueryBuilder method. This
        could lead to SQL injection if the variable is user-controlled and not properly sanitized.
        In order to prevent SQL injection, used parameterized queries or prepared statements
        instead.

         71â”† ->select('t.' . $positionDefinition->getIdField() . ', t.' . $positionDefinition->getPositionField())
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb             ->from($this->dbPrefix . $positionDefinition->getTable(), 't')
        ->select('t.' . $positionDefinition->getIdField() . ', t.' .
        $positionDefinition->getPositionField())` Detected string concatenation with a non-literal
        variable in a Doctrine QueryBuilder method. This could lead to SQL injection if the variable
        is user-controlled and not properly sanitized. In order to prevent SQL injection, used
        parameterized queries or prepared statements instead.

         72â”† ->addOrderBy('t.' . $positionDefinition->getPositionField(), 'ASC');
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb` Detected string concatenation with a non-literal variable in a Doctrine QueryBuilder
        method. This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

         76â”† ->andWhere('t.`' . $positionDefinition->getParentIdField() . '` = :parentId')
          â‹®â”†----------------------------------------
        109â”† ->andWhere('`' . $positionDefinition->getParentIdField() . '` = :parentId')


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Grid/Query/ManufacturerQueryBuilder.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb             ->select('m.`id_manufacturer`, m.`name`, m.`active`')
        ->addSelect('COUNT(p.`id_product`) AS `products_count`')` Detected string concatenation with
        a non-literal variable in a Doctrine QueryBuilder method. This could lead to SQL injection
        if the variable is user-controlled and not properly sanitized. In order to prevent SQL
        injection, used parameterized queries or prepared statements instead.

         83â”† ->addSelect('(' . $addressesQb->getSQL() . ') AS addresses_count')


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Grid/Query/Monitoring/NoQtyProductWithoutCombinationQueryBuilder.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$subQuery->select('1')             ->from($this->dbPrefix . 'stock_available', 'stock')
        ->andWhere('p.id_product = stock.id_product')` Detected string concatenation with a non-
        literal variable in a Doctrine QueryBuilder method. This could lead to SQL injection if the
        variable is user-controlled and not properly sanitized. In order to prevent SQL injection,
        used parameterized queries or prepared statements instead.

         82â”† ->andWhere('NOT EXISTS(' . $attrSubQuery->getSQL() . ')')
          â‹®â”†----------------------------------------
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-orm-dangerous-query
        `$qb` Detected string concatenation with a non-literal variable in a Doctrine QueryBuilder
        method. This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

         90â”† $qb->andWhere('EXISTS(' . $subQuery->getSQL() . ')');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Image/Deleter/ImageFileDeleter.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

         56â”† unlink($path . 'fileType');
          â‹®â”†----------------------------------------
         73â”† unlink($path . 'index.php');
          â‹®â”†----------------------------------------
        106â”† unlink($path . $filename);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/Core/Shop/LogoUploader.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

        195â”† @unlink($this->imageDirection . Configuration::get($fieldName));
          â‹®â”†----------------------------------------
        200â”† unlink($tmpName);
          â‹®â”†----------------------------------------
        220â”† @unlink($this->imageDirection . Configuration::get($fieldName));
          â‹®â”†----------------------------------------
        228â”† @unlink($this->imageDirection . Configuration::get($fieldName));


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Command/UpdateSchemaCommand.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

         98â”† $connection->executeQuery($sql);
          â‹®â”†----------------------------------------
        126â”† $query = $connection->executeQuery(
        127â”†     'SELECT CONSTRAINT_NAME, TABLE_NAME ' .
        128â”†     'FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS ' .
        129â”†     'WHERE CONSTRAINT_TYPE = "FOREIGN KEY" ' .
        130â”†     'AND TABLE_SCHEMA = "' . $this->dbName . '" ' .
        131â”†     'AND TABLE_NAME LIKE "' . $this->dbPrefix . '%"'
        132â”† );
          â‹®â”†----------------------------------------
        141â”† $nbQueries += $connection->executeQuery($drop);
          â‹®â”†----------------------------------------
        287â”† $query = $connection->executeQuery('SHOW FULL COLUMNS FROM ' . $tableName . ' WHERE Field="' . $fieldName . '"');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/DataCollector/HookDataCollector.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unserialize-use
        Calling `unserialize()` with user input in the pattern can lead to arbitrary code execution.
        Consider using JSON or structured data approaches (e.g. Google Protocol Buffers).

         72â”† $this->data = is_array($data) ? $data : @unserialize($data);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/CategoryRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        123â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/FeatureAttributeRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        139â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        189â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/ManufacturerRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        101â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/OrderInvoiceRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

         72â”† $statement = $this->connection->prepare($sql);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/StockManagementRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        226â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        267â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        535â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        557â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        585â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/StockMovementRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        246â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        289â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/StockRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        173â”† $statement = $this->connection->prepare($query);
          â‹®â”†----------------------------------------
        361â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Entity/Repository/SupplierRepository.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.doctrine-dbal-dangerous-query
        Detected string concatenation with a non-literal variable in a Doctrine DBAL query method.
        This could lead to SQL injection if the variable is user-controlled and not properly
        sanitized. In order to prevent SQL injection, used parameterized queries or prepared
        statements instead.

        101â”† $statement = $this->connection->prepare($query);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/src/PrestaShopBundle/Install/Install.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.unlink-use
        Using user input when deleting files with `unlink()` is potentially dangerous. A malicious
        actor could use this to modify or access files they have no right to.

       1137â”† @unlink($zip_file);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/themes/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/tools/foreignkeyGenerator/foreign.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.exec-use
        Executing non-constant commands. This can lead to command injection.

        207â”† executeQueries(forgeChangesQueries($changes));
          â‹®â”†----------------------------------------
        210â”† executeQueries(forgeRelationsQueries($relations));


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/tools/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/tools/profiling/Tools.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         61â”† header($header);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/tools/profiling/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         27â”† header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT');


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/translations/export/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/translations/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/upload/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/webservice/dispatcher.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         62â”† header($_SERVER['SERVER_PROTOCOL'] . ' 401 Unauthorized');
          â‹®â”†----------------------------------------
        107â”† header($param_value);


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/PrestaShop.PrestaShop/webservice/index.php 
     home.rtz.github_vuln_research.my_semgrep_rules.php_semgrep_rules.non-literal-header
        Using user input when setting headers with `header()` is potentially dangerous. This could
        allow an attacker to inject a new line and add a new header into the response. This is
        called HTTP response splitting. To fix, do not allow whitespace inside `header()`: '[^\s]+'.

         28â”† header("Last-Modified: ".gmdate("D, d M Y H:i:s")." GMT");
