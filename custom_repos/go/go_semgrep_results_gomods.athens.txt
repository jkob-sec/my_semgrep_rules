
Findings:

  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/gomods.athens/cmd/proxy/main.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.pprof-debug-exposure
        The profiling 'pprof' endpoint is automatically exposed on /debug/pprof. This could leak
        information about the server. Instead, use `import "net/http/pprof"`. See
        https://www.farsightsecurity.com/blog/txt-record/go-remote-profiling-20161028/ for more
        information and mitigation.

         73┆ log.Fatal(http.ListenAndServe(conf.PprofPort, nil))


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/gomods.athens/e2etests/run_athens.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.dangerous-exec-command
        Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified
        user data can reach this call site, this is a code injection vulnerability. A malicious
        actor can inject a malicious script to execute arbitrary code.

         22┆ cmd := exec.Command(goBin, "build", "-o", target, binFolder)
          ⋮┆----------------------------------------
         41┆ cmd := exec.CommandContext(ctx, athensBin)


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/gomods.athens/pkg/module/go_get_fetcher.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.dangerous-exec-command
        Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified
        user data can reach this call site, this is a code injection vulnerability. A malicious
        actor can inject a malicious script to execute arbitrary code.

        130┆ cmd := exec.CommandContext(ctx, goBinaryName, "mod", "download", "-json", fullURI)
          ⋮┆----------------------------------------
        176┆ err := exec.Command(name).Run()


  /home/rtz/github_vuln_research/my_semgrep_rules/custom_repos/repos_dir/gomods.athens/pkg/module/go_vcs_lister.go 
     home.rtz.github_vuln_research.my_semgrep_rules.go_semgrep_rules.dangerous-exec-command
        Detected non-static command inside Command. Audit the input to 'exec.Command'. If unverified
        user data can reach this call site, this is a code injection vulnerability. A malicious
        actor can inject a malicious script to execute arbitrary code.

         50┆ cmd := exec.Command(
         51┆ 	l.goBinPath,
         52┆ 	"list", "-m", "-versions", "-json",
         53┆ 	config.FmtModVer(module, "latest"),
         54┆ )
