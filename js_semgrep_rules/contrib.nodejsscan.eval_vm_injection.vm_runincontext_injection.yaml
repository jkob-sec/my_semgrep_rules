rules:
  - id: vm_runincontext_injection
    patterns:
      - pattern-inside: |
          require('vm');
          ...
      - pattern-either:
          - pattern-inside: function ($REQ, $RES, ...) {...}
          - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
          - pattern-inside: $X = function $FUNC($REQ, $RES, ...) {...}
          - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
          - pattern-inside: $APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})
      - pattern-either:
          - pattern: |
              $CONTEXT = <... $REQ.$QUERY.$FOO ...>;
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $CONTEXT = {$NAME: <... $REQ.$QUERY.$FOO ...>};
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $CONTEXT = <... {$NAME:$REQ.$QUERY.$FOO} ...>;
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $VAR = <... $REQ.$QUERY.$FOO ...>;
              ...
              $CONTEXT = {$NAME: <... $VAR ...>};
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $CONTEXT = <... $REQ.$BODY ...>;
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $CONTEXT = {$NAME: <... $REQ.$BODY ...>};
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $CONTEXT = <... {$NAME:$REQ.$BODY} ...>;
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
          - pattern: |
              $VAR = <... $REQ.$BODY ...>;
              ...
              $CONTEXT = {$NAME: <... $VAR ...>};
              ...
              $VM.runInContext($CODE,<... $CONTEXT ...>,...);
    message: Untrusted user input in `vm.runInContext()` can result in code injection.
    severity: ERROR
    languages:
      - javascript
    metadata:
      owasp: A01:2017 - Injection
      cwe: "CWE-94: Improper Control of Generation of Code ('Code Injection')"
      category: security
      technology:
        - node.js
        - express
      license: Commons Clause License Condition v1.0[LGPL-2.1-only]

